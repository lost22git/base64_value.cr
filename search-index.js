crystal_doc_search_index_callback({"repository_name":"base64_value","body":"# base64_value\n\nLazy Base64Value wrapper\n\n[API DOC](https://lost22git.github.io/base64_value.cr)\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     base64_value:\n       github: lost22git/base64_value.cr\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"base64_value\"\n\nbase64_value = Base64Value.parse \"Y3J5c3RhbA==\"\n\n# or\n# base64_value = Base64Value.from_bytes UInt8.static_array(99, 114, 121, 115, 116, 97, 108).to_slice\n\n# or\n# base64_value = Base64Value.from_plain \"crystal\"\n\nputs base64_value.to_s # => \"Y3J5c3RhbA==\"\nputs base64_value.to_bytes # => Bytes[99, 114, 121, 115, 116, 97, 108]\nputs base64_value.to_plain # => crystal\n\n```\n\n## Development\n\n### Run tests\n\n```\ncrystal spec --progress\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/lost22git/base64_value.cr/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [lost](https://github.com/your-github-user) - creator and maintainer\n","program":{"html_id":"base64_value/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"base64_value","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"base64_value/Base64Value","path":"Base64Value.html","kind":"class","full_name":"Base64Value","name":"Base64Value","abstract":false,"superclass":{"html_id":"base64_value/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"base64_value/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"base64_value/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/base64_value.cr","line_number":3,"url":"https://github.com/lost22git/base64_value.cr/blob/be201f7cd9c1531146f413c4de330ed582f77ef5/src/base64_value.cr#L3"}],"repository_name":"base64_value","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\""}],"constructors":[{"html_id":"from_bytes(bytes:Bytes,urlsafe:Bool=false):Base64Value-class-method","name":"from_bytes","doc":"create Base64Value from bytes\n\n```\nbase64_value = Base64Value.from_bytes(UInt8.static_array(99, 114, 121, 115, 116, 97, 108).to_slice)\nputs base64_value.to_s # => Y3J5c3RhbA==\n```\n","summary":"<p>create Base64Value from bytes</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"urlsafe","default_value":"false","external_name":"urlsafe","restriction":"Bool"}],"args_string":"(bytes : Bytes, urlsafe : Bool = false) : Base64Value","args_html":"(bytes : Bytes, urlsafe : Bool = <span class=\"n\">false</span>) : <a href=\"Base64Value.html\">Base64Value</a>","location":{"filename":"src/base64_value.cr","line_number":34,"url":"https://github.com/lost22git/base64_value.cr/blob/be201f7cd9c1531146f413c4de330ed582f77ef5/src/base64_value.cr#L34"},"def":{"name":"from_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"urlsafe","default_value":"false","external_name":"urlsafe","restriction":"Bool"}],"return_type":"Base64Value","visibility":"Public","body":"Base64Value.new(base64: LazyValue(String).create do\n  urlsafe ? Base64.urlsafe_encode(bytes) : Base64.strict_encode(bytes)\nend, bytes: LazyValue(Bytes).create(bytes), plain: LazyValue(String).create do\n  String.new(bytes)\nend)"}},{"html_id":"from_plain(plain:String,urlsafe:Bool=false):Base64Value-class-method","name":"from_plain","doc":"create Base64Value from plain string\n\n```\nbase64_value = Base64Value.from_plain(\"crystal\")\nputs base64_value.to_s # => Y3J5c3RhbA==\n```\n","summary":"<p>create Base64Value from plain string</p>","abstract":false,"args":[{"name":"plain","external_name":"plain","restriction":"String"},{"name":"urlsafe","default_value":"false","external_name":"urlsafe","restriction":"Bool"}],"args_string":"(plain : String, urlsafe : Bool = false) : Base64Value","args_html":"(plain : String, urlsafe : Bool = <span class=\"n\">false</span>) : <a href=\"Base64Value.html\">Base64Value</a>","location":{"filename":"src/base64_value.cr","line_number":49,"url":"https://github.com/lost22git/base64_value.cr/blob/be201f7cd9c1531146f413c4de330ed582f77ef5/src/base64_value.cr#L49"},"def":{"name":"from_plain","args":[{"name":"plain","external_name":"plain","restriction":"String"},{"name":"urlsafe","default_value":"false","external_name":"urlsafe","restriction":"Bool"}],"return_type":"Base64Value","visibility":"Public","body":"Base64Value.new(base64: LazyValue(String).create do\n  urlsafe ? Base64.urlsafe_encode(plain.to_slice) : Base64.strict_encode(plain.to_slice)\nend, bytes: LazyValue(Bytes).create do\n  plain.to_slice\nend, plain: LazyValue(String).create(plain))"}},{"html_id":"parse(base64:String):Base64Value-class-method","name":"parse","doc":"parse base64 string to Base64Value\n\n```\nbase64_value = Base64Value.parse(\"Y3J5c3RhbA==\")\nputs base64_value.to_s # => Y3J5c3RhbA==\n```\n","summary":"<p>parse base64 string to Base64Value</p>","abstract":false,"args":[{"name":"base64","external_name":"base64","restriction":"String"}],"args_string":"(base64 : String) : Base64Value","args_html":"(base64 : String) : <a href=\"Base64Value.html\">Base64Value</a>","location":{"filename":"src/base64_value.cr","line_number":19,"url":"https://github.com/lost22git/base64_value.cr/blob/be201f7cd9c1531146f413c4de330ed582f77ef5/src/base64_value.cr#L19"},"def":{"name":"parse","args":[{"name":"base64","external_name":"base64","restriction":"String"}],"return_type":"Base64Value","visibility":"Public","body":"Base64Value.new(base64: LazyValue(String).create(base64), bytes: LazyValue(Bytes).create do\n  Base64.decode(base64)\nend, plain: LazyValue(String).create do\n  Base64.decode_string(base64)\nend)"}}],"instance_methods":[{"html_id":"to_bytes:Bytes-instance-method","name":"to_bytes","doc":"to bytes\n\n```\nbase64_value = Base64Value.parse(\"Y3J5c3RhbA==\")\nputs base64_value.to_bytes # => Bytes[99, 114, 121, 115, 116, 97, 108]\n```\n","summary":"<p>to bytes</p>","abstract":false,"location":{"filename":"src/base64_value.cr","line_number":75,"url":"https://github.com/lost22git/base64_value.cr/blob/be201f7cd9c1531146f413c4de330ed582f77ef5/src/base64_value.cr#L75"},"def":{"name":"to_bytes","return_type":"Bytes","visibility":"Public","body":"@bytes.get"}},{"html_id":"to_plain:String-instance-method","name":"to_plain","doc":"to plain string\n\n```\nbase64_value = Base64Value.parse(\"Y3J5c3RhbA==\")\nputs base64_value.to_plain # => crystal\n```\n","summary":"<p>to plain string</p>","abstract":false,"location":{"filename":"src/base64_value.cr","line_number":86,"url":"https://github.com/lost22git/base64_value.cr/blob/be201f7cd9c1531146f413c4de330ed582f77ef5/src/base64_value.cr#L86"},"def":{"name":"to_plain","return_type":"String","visibility":"Public","body":"@plain.get"}},{"html_id":"to_s:String-instance-method","name":"to_s","doc":"to base64 string\n\n```\nbase64_value = Base64Value.parse(\"Y3J5c3RhbA==\")\nputs base64_value.to_s # => Y3J5c3RhbA==\n```\n","summary":"<p>to base64 string</p>","abstract":false,"location":{"filename":"src/base64_value.cr","line_number":64,"url":"https://github.com/lost22git/base64_value.cr/blob/be201f7cd9c1531146f413c4de330ed582f77ef5/src/base64_value.cr#L64"},"def":{"name":"to_s","return_type":"String","visibility":"Public","body":"@base64.get"}}]}]}})